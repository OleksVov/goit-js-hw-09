{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,OAAQL,SAASC,cAAc,WAGjC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GACtChB,EAAKO,OAAOU,gBAAgB,YAC5BjB,EAAKI,MAAMc,MAAQ,GACnBlB,EAAKK,KAAKa,MAAQ,GAClBlB,EAAKM,OAAOY,MAAQ,GAEhBJ,EACFH,EAAQ,CAACF,WAAUL,UAEnBQ,EAAO,CAACH,WAAUL,S,GAEpBA,E,IAMNJ,EAAKC,KAAKkB,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBACNrB,EAAKO,OAAOe,aAAa,WAAY,YAMrC,IAJA,IAAMC,EAAaC,OAAOxB,EAAKI,MAAMc,OAC/Bb,EAAOmB,OAAOxB,EAAKK,KAAKa,OACxBZ,EAASkB,OAAOxB,EAAKM,OAAOY,OAExBO,EAAI,EAAGA,EAAInB,EAAQmB,GAAI,EAAG,CAIlCjB,EAHiBiB,EAAE,EACLF,EAAalB,EAAKoB,GAGjCC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MACjBwB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,MAAK,CAAC4B,QAAS,K,IAEtFC,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MAClBwB,EAAA9B,GAAS+B,OAAOK,QAAQ,sBAAqCH,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,MAAK,CAAC4B,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('button'),\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.5;\n      refs.button.removeAttribute('disabled');\n      refs.delay.value = \"\";\n      refs.step.value = \"\";\n      refs.amount.value = \"\";\n\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    },delay);\n    \n  });\n}\n\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  refs.button.setAttribute('disabled', 'disabled');\n\n  const delayInput = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for ( let i = 0; i < amount; i +=1) {\n    const position = i+1;\n    const delay = delayInput + step*i;\n\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {timeout: 3000,},);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {timeout: 3000,},);\n  });\n  }\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","button","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","removeAttribute","value","addEventListener","event","preventDefault","setAttribute","delayInput","Number","i","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.1c67f419.js.map"}